{"version":3,"file":"static/js/132.9893a6f7.chunk.js","mappings":"wMACA,EAAkC,kCAAlC,EAAoF,gCAApF,EAAmI,+BAAnI,EAAqL,mCAArL,EAA8O,sC,UCA9O,EAA8B,0BAA9B,EAAoE,wBAApE,EAAwG,wBAAxG,EAAiJ,6BAAjJ,EAA0L,wBAA1L,EAAqO,0DAArO,EAA6S,gDAA7S,EAAgX,+B,4BCSjW,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IA6B7B,OACE,iBAAKC,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SAA8B,cAAe,KAC7C,kBAAMC,SA9BW,SAAAC,GACnBA,EAAIC,iBACAP,EAASQ,MAAK,SAAAC,GAAI,OAAIA,EAAKC,OAASJ,EAAIK,cAAcD,KAAKE,KAAzC,IACpBZ,EAASa,SAAQ,SAAAJ,GACXA,EAAKC,OAASJ,EAAIK,cAAcD,KAAKE,OACvCd,GACEgB,EAAAA,EAAAA,IAAa,CACXC,GAAIN,EAAKM,GACTL,KAAMJ,EAAIK,cAAcD,KAAKE,MAC7BI,OAAQV,EAAIK,cAAcK,OAAOJ,QAIxC,IAEDd,GACEmB,EAAAA,EAAAA,IAAW,CACTP,KAAMJ,EAAIK,cAAcD,KAAKE,MAC7BI,OAAQV,EAAIK,cAAcK,OAAOJ,SAIvCd,GAASoB,EAAAA,EAAAA,OAETZ,EAAIK,cAAcQ,OACnB,EAKiChB,UAAWC,EAAzC,WACE,mBAAOD,UAAWC,EAAlB,UAAsC,QAEpC,kBACEgB,KAAK,OACLV,KAAK,OACLW,UAAQ,EACRC,YAAY,gBAGZnB,UAAWC,QAGf,mBAAOD,UAAWC,EAAlB,UAAwC,UAEtC,kBACEgB,KAAK,MACLV,KAAK,SACLW,UAAQ,EAGRC,YAAY,eACZnB,UAAWC,QAGf,mBAAQgB,KAAK,SAASjB,UAAWC,EAAjC,SAAuD,qBAM9D,CC1ED,MAA8B,4BAA9B,EAAwE,4B,UCIzD,SAASmB,IACtB,IAAMzB,GAAWC,EAAAA,EAAAA,MAMjB,OACE,mBAAOI,UAAWC,EAAlB,UAAmC,yBAEjC,kBACEgB,KAAK,OACLV,KAAK,SACLY,YAAY,eACZE,SAXe,SAAAlB,GACnBR,GAAS2B,EAAAA,EAAAA,IAAanB,EAAIK,cAAcC,OACzC,EAUKT,UAAWC,MAIlB,CCZc,SAASsB,IACtB,IAAM5B,GAAWC,EAAAA,EAAAA,MACX4B,GAAY1B,EAAAA,EAAAA,IAAY2B,EAAAA,IACxBC,GAAQ5B,EAAAA,EAAAA,IAAY6B,EAAAA,IAEpBC,GAAmB9B,EAAAA,EAAAA,IAAY+B,EAAAA,IAMrC,OAJAC,EAAAA,EAAAA,YAAU,WACRnC,GAASoB,EAAAA,EAAAA,MACV,GAAE,CAACpB,KAGF,iBACEoC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,SAAU,IANd,WASE,SAAC1C,EAAD,KACA,SAAC0B,EAAD,IACCI,IAAcE,IAAS,uBAAG,gBAC3B,iBAAK1B,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SAAkC,cAClC,eAAID,UAAWC,EAAf,cACwBoC,IAArBT,GACCA,EAAiBU,KAAI,SAAAC,GAAO,OAC1B,gBAAqBvC,UAAWC,EAAhC,UACG,KACAsC,EAAQhC,KACR,WACAgC,EAAQ1B,QACT,mBACEI,KAAK,SACLuB,QAAS,kBAAM7C,GAAS8C,EAAAA,EAAAA,IAAcF,EAAQ3B,IAArC,EACTZ,UAAWC,EAHb,SAIC,aATMsC,EAAQ3B,GADS,WAmBvC,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Contacts/Contacts.module.css?5e71","webpack://goit-react-hw-08-phonebook/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactsSection\":\"Contacts_contactsSection__Cms38\",\"contactsTitle\":\"Contacts_contactsTitle__2DCDn\",\"contactsList\":\"Contacts_contactsList__g3sDu\",\"contactsListItem\":\"Contacts_contactsListItem__VPa2O\",\"deleteContactButton\":\"Contacts_deleteContactButton__al51l\"};","// extracted by mini-css-extract-plugin\nexport default {\"formSection\":\"Form_formSection__tiVog\",\"formTitle\":\"Form_formTitle__b3yEU\",\"inputForm\":\"Form_inputForm__wnZfX\",\"inputNameLabel\":\"Form_inputNameLabel__yhXHE\",\"inputName\":\"Form_inputName__+Pfkf\",\"inputNumberLabel\":\"Form_inputNumberLabel__Z94hk Form_inputNameLabel__yhXHE\",\"inputNumber\":\"Form_inputNumber__+CNoV Form_inputName__+Pfkf\",\"submitFormButton\":\"Form_submitFormButton__BiEQm\"};","import React from 'react';\nimport css from './Form.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addContact,\n  fetchContacts,\n  patchContact,\n} from '../../redux/operations';\nimport { selectContacts } from 'redux/selectors';\n\nexport default function Form() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (contacts.find(item => item.name === evt.currentTarget.name.value)) {\n      contacts.forEach(item => {\n        if (item.name === evt.currentTarget.name.value) {\n          dispatch(\n            patchContact({\n              id: item.id,\n              name: evt.currentTarget.name.value,\n              number: evt.currentTarget.number.value,\n            })\n          );\n        }\n      });\n    } else {\n      dispatch(\n        addContact({\n          name: evt.currentTarget.name.value,\n          number: evt.currentTarget.number.value,\n        })\n      );\n    }\n    dispatch(fetchContacts());\n\n    evt.currentTarget.reset();\n  };\n\n  return (\n    <div className={css.formSection}>\n      <h1 className={css.formTitle}>Phonebook</h1>{' '}\n      <form onSubmit={handleSubmit} className={css.inputForm}>\n        <label className={css.inputNameLabel}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            required\n            placeholder=\"Enter contact\"\n            // onChange={handleChange}\n            // value={name}\n            className={css.inputName}\n          />\n        </label>\n        <label className={css.inputNumberLabel}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            required\n            // onChange={handleChange}\n            // value={number}\n            placeholder=\"Enter number\"\n            className={css.inputNumber}\n          />\n        </label>\n        <button type=\"submit\" className={css.submitFormButton}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import React from 'react';\nimport css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { updateFilter } from 'redux/slices';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n  const changeFilter = evt => {\n    dispatch(updateFilter(evt.currentTarget.value));\n  };\n\n  return (\n    <label className={css.filterLabel}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter filter\"\n        onChange={changeFilter}\n        className={css.filterInput}\n      />\n    </label>\n  );\n}\n","import React, { useEffect } from 'react';\nimport css from './Contacts.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Form from '../Form/Form';\nimport Filter from '../Filter/Filter';\nimport {\n  selectError,\n  selectFilteredContacts,\n  selectIsLoading,\n} from 'redux/selectors';\nimport { deleteContact, fetchContacts } from 'redux/operations';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 40,\n      }}\n    >\n      <Form />\n      <Filter />\n      {isLoading && !error && <b>Loading...</b>}\n      <div className={css.contactsSection}>\n        <h2 className={css.contactsTitle}>Contacts</h2>\n        <ul className={css.contactsList}>\n          {filteredContacts !== undefined &&\n            filteredContacts.map(contact => (\n              <li key={contact.id} className={css.contactsListItem}>\n                {'  '}\n                {contact.name}\n                {' â€” '}\n                {contact.number}\n                <button\n                  type=\"button\"\n                  onClick={() => dispatch(deleteContact(contact.id))}\n                  className={css.deleteContactButton}\n                >\n                  Delete\n                </button>\n              </li>\n            ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n"],"names":["Form","dispatch","useDispatch","contacts","useSelector","selectContacts","className","css","onSubmit","evt","preventDefault","find","item","name","currentTarget","value","forEach","patchContact","id","number","addContact","fetchContacts","reset","type","required","placeholder","Filter","onChange","updateFilter","Contacts","isLoading","selectIsLoading","error","selectError","filteredContacts","selectFilteredContacts","useEffect","style","display","flexDirection","justifyContent","alignItems","fontSize","undefined","map","contact","onClick","deleteContact"],"sourceRoot":""}